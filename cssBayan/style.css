html {
  font-size: 10px;
}

.wrapper {
  margin: 0 auto;
  width: 50vw;
}

h1 {
  font-size: 2.4rem;
  text-align: center;
}

/* .memBlock__containerForTextAndIcon {
  display: flex;
  justify-content: space-between;
} */

.memBlock__text {
  font-size: 2rem;
  margin: 30px 0;
}

/* .memBlock__iconExpand {
  height: 5vh;
  width: 2.2vw;
} */



/* .memBlock__image {

} */




.memBlock input {
  /* visibility: hidden; */
  display: none;
  
}

.memBlock label {
  /* position: relative;
  width: 100%; */
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 30px 0;
  font-size: 3rem;
}

.memBlock__imageContainer {
  overflow: hidden;
  max-height: 0;
  /* visibility: hidden; */
  width: 25vw;
  margin: 0 auto;
  transition: all 1.5s;
}



.memBlock input:checked ~ .memBlock__imageContainer {
  max-height: 100vh;
  transition: all 1s;
  /* visibility: visible; */
}

.divForLabelAndIcon{
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.labelExpandIcon {
  background: url(./assets/expand.svg);
  max-width: 20px;
  max-height: 20px;
  /* opacity: 1; */
  background-size: contain;
  background-repeat: no-repeat;
}
.labelCollapseIcon {
  background: url(./assets/collapse.svg);
  max-width: 20px;
  max-height: 0;
  /* opacity: 1; */
}

.memBlock input:checked + label>.labelCollapseIcon {
  /* opacity: 1; */
  transition: all 1s;
  /* transform: rotate(45deg); */
  max-height: 20px;
}
.memBlock input:checked + label>.labelExpandIcon {
  /* opacity: 1; */
  max-height: 0;
  transition: all 1s;
  /* transform: rotate(45deg); */
}
.memBlock input:not(:checked) + label>.labelCollapseIcon {
  transition: all 1s;
  max-height: 20px;
  /* transform: rotate(-45deg); */
}
.memBlock input:not(:checked) + label>.labelExpandIcon {
  transition: all 1s;
  /* transform: rotate(-45deg); */
  max-height: 20px;
}

/* .memBlock label::after {
  display: block;
  content: "\2b";
  content: url(./assets/collapse.svg);
  width: 1vw;
  transition: all 1s;
} */

/* .memBlock input:checked ~ .memBlock label::after {

  transform: rotate(45deg);
} */


/* nnnnnnnnnnnnnnnnnnnnnnnnnnnnn */

















/* #idForVisibility:not(:target) {
  visibility: hidden;
}

#idForVisibility:target {
  visibility: visible;
} */